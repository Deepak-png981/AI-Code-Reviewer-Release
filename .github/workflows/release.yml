name: Publish Action to Marketplace

on:
  push:
    branches:
      - main

branding:
  icon: 'terminal'
  color: 'gray-dark'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the public repo code (including dist/).
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Read the version from dist/VERSION.
      - name: Read Version
        id: get_version
        run: |
          # We'll store the version in an output variable for the next step
          if [ -f dist/VERSION ]; then
            version=$(cat dist/VERSION)
          else
            echo "No VERSION file found in dist/. Using fallback."
            version="0.0.0-$(date +'%Y%m%d%H%M%S')"
          fi
          echo "Version read: $version"
          echo "::set-output name=version::$version"

      # Step 3: Create or update the release using the GitHub CLI
      # This automatically tags your repo with v{version}, e.g., v1.2.3
      - name: Create GitHub Release
        run: |
          # Prepend 'v' to ensure it's recognized as a valid semver tag for Actions
          release_tag="v${{ steps.get_version.outputs.version }}"
          echo "Creating release for tag: $release_tag"

          # If this tag already exists, 'gh release create' will fail.
          # One workaround is to delete the old tag or skip creation if it already exists.
          # For simplicity, we'll attempt to create a new release each time:
          gh release create "$release_tag" \
            --title "Release $release_tag" \
            --notes "Automated release for version $release_tag" \
            --latest
        env:
          # GITHUB_TOKEN is automatically provided with enough permissions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
